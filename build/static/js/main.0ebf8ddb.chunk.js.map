{"version":3,"sources":["firebase.js","Components/Header.js","features/app.js","Components/SideBarOption.js","Components/SideBar.js","Components/ChatInput.js","Components/Message.js","Components/Chat.js","Components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","alt","displayName","src","photoURL","style","marginLeft","fontSize","HeaderRight","IconButton","onClick","signOut","styled","div","Avatar","appSlice","createSlice","name","initialState","value","reducers","enterRoom","state","action","roomId","payload","actions","selectRoomId","app","SideBarOption","id","Icon","title","addChannelOption","dispatch","useDispatch","SideBarOptionContainer","prompt","channelName","collection","add","alert","padding","overflow","SideBarOptionChannel","h3","SideBar","useCollection","channels","SideBarContainer","SideBarHeader","SideBarInfo","InsertComment","Inbox","Add","className","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","onChange","e","target","placeholder","Button","hidden","type","preventDefault","message","timeStamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","timestamp","sameUser","console","log","MessageContainer","Date","toDate","toUTCString","textAlign","Chat","user1","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","messages","App","AppLoading","AppLoadingContents","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ebf8ddb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: \"slackback-3e0b2.firebaseapp.com\",\r\n  projectId: \"slackback-3e0b2\",\r\n  storageBucket: \"slackback-3e0b2.appspot.com\",\r\n  messagingSenderId: \"1098223318446\",\r\n  appId: \"1:1098223318446:web:764be43008ecfc7d20c43f\",\r\n  measurementId: \"G-QJK7TYGNLL\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider, db} ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar } from '@material-ui/core';\r\n \r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from './../firebase';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport IconButton from '@mui/material/IconButton'; \r\n\r\n\r\n\r\nexport default function Header() {\r\n  const [user] = useAuthState(auth)\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      {/* Header left */}\r\n      <HeaderLeft>\r\n        <HeaderAvatar\r\n          \r\n          alt={user?.displayName}\r\n          src={user?.photoURL}\r\n        />\r\n         <p style={{marginLeft:10, fontSize:12}}>{user?.displayName}</p>\r\n      </HeaderLeft>\r\n\r\n      {/* Header Search */}\r\n\r\n\r\n      {/* Header Right */}\r\n      <HeaderRight>\r\n\r\n        <h4 style={{ marginLeft: 10 }}>Logout</h4>\r\n        <IconButton onClick={() => { auth.signOut() }}><LogoutIcon /></IconButton>\r\n        \r\n      </HeaderRight>\r\n\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nconst HeaderSearch = styled.div`\r\n   flex:0.4;\r\n   opacity: 1;\r\n   border-radius: 6px;\r\n   background-color: #421f44;\r\n   text-align: center;\r\n   display: flex;\r\n   padding: 0 50px;\r\n   color: gray;\r\n   border: 1px gray solid;\r\n\r\n  > input {\r\n    background-color: transparent;\r\n    border: none;\r\n    text-align: center;\r\n    min-width: 30vw; \r\n    outline: 0;\r\n    color: white;\r\n    }\r\n`\r\nconst HeaderContainer = styled.div`\r\nwidth: 100%;\r\n\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n\r\npadding: 9px 0;\r\nbackground: rgba(255, 255, 255, 0.25);\r\nbox-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\r\nbackdrop-filter: blur(4px);\r\n-webkit-backdrop-filter: blur(4px);\r\nborder: 1px solid rgba(255, 255, 255, 0.18);\r\nposition: fixed;\r\nz-index: 2;\r\n   `;\r\nconst HeaderLeft = styled.div`\r\n     \r\n   display: flex;\r\n   align-items: center;\r\n   margin-left: 30px;\r\n    \r\n   > .MuiSvgIcon-root {\r\n     margin-left: auto;\r\n     margin-right: 30px;\r\n   }\r\n`\r\nconst HeaderAvatar = styled(Avatar)`\r\ncursor: pointer;\r\n:hover {\r\n  opacity: 0.8;\r\n}\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    \r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: flex-end;\r\n\r\n   > .MuiIconButton-root {\r\n       \r\n      margin: 0px 20px 0px 10px;\r\n   }\r\n`","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { enterRoom } from '../features/app.js';\r\n import { db } from '../firebase';\r\n\r\n\r\nexport default function SideBarOption({ id, Icon, title, addChannelOption }) {\r\n   \r\n  const dispatch = useDispatch();\r\n  const addChannel = () => {\r\n    const password = prompt(\"Please enter the password or contact the admin to add the channel\");\r\n    if(password==\"1234\"){\r\n    \r\n     const channelName = prompt(\"Please enter channel name\");\r\n      \r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n         \r\n      })\r\n    }\r\n    }\r\n    else{\r\n      alert(\"Wrong password\")\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(enterRoom({\r\n        roomId: id\r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SideBarOptionContainer\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n      {Icon ? (\r\n        <h3 style={{overflow:\"hidden\"}}>{title}</h3>\r\n      ) : (\r\n        <SideBarOptionChannel>\r\n          <span>#</span>{title}\r\n        </SideBarOptionChannel>)\r\n      }\r\n    </SideBarOptionContainer >\r\n  )\r\n}\r\nconst SideBarOptionContainer = styled.div`\r\n  display:flex;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.9;\r\n    background-color: #340e36;\r\n  }\r\n\r\n  > h3 {\r\n    font-weight: 500;\r\n  }\r\n\r\n  > h3 > span {\r\n    padding: 15px;\r\n  }\r\n`;\r\nconst SideBarOptionChannel = styled.h3`\r\n  padding: 10px;\r\n  font-weight: 300;\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\r\n import SideBarOption from './SideBarOption';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\nimport {   InsertComment,   Inbox, Add } from '@material-ui/icons';\r\nimport { db, auth } from '../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport './SideBar.css'\r\n \r\nfunction SideBar() {\r\n  const [user] = useAuthState(auth)\r\n  const [channels] = useCollection(db.collection('rooms'))\r\n\r\n  return (\r\n   \r\n    <SideBarContainer>\r\n      <SideBarHeader>\r\n        <SideBarInfo>\r\n          <h2>siddharthp/dev/community</h2>\r\n          \r\n        </SideBarInfo>\r\n        \r\n      </SideBarHeader>\r\n      \r\n\r\n     \r\n      <SideBarOption Icon={InsertComment} title=\"Threads (under build)\" />\r\n      <SideBarOption Icon={Inbox} title=\"Codes & debugs (under build)\" />\r\n      {/* <SideBarOption Icon={BookmarkBorder} title=\"Channel browser\" />\r\n      <SideBarOption Icon={PeopleAlt} title=\"People and user groups\" />\r\n      <SideBarOption Icon={Apps} title=\"Apps\" />\r\n      <SideBarOption Icon={FileCopy} title=\"file browser\" />\r\n      <SideBarOption Icon={ExpandLess} title=\"Show less\" /> */}\r\n       \r\n      <SideBarOption Icon={Add} addChannelOption title=\"Add channels\" />\r\n      <div className='overflow' id=\"style-3\">\r\n      {channels?.docs.map((doc) => (\r\n        <SideBarOption key={doc.id}   id={doc.id} title={doc.data().name} />\r\n      ))}\r\n       </div>\r\n    </SideBarContainer>\r\n   \r\n  )\r\n}\r\n\r\nexport default SideBar\r\n\r\nconst SideBarContainer = styled.div`\r\nbackground-image: url(\"https://wallpaperaccess.com/full/3119143.png\") ;\r\nbackground-repeat: no-repeat, repeat;\r\nbackground-position:center;\r\nbackground-size: cover;\r\n   color: white;\r\n   flex: 0.25;\r\n   border-top: 1px solid #49274b;\r\n    \r\n   margin-top: 60px;\r\n\r\n   >hr {\r\n     margin-top: 10px;\r\n     margin-bottom: 10px;\r\n     border: 1px solid #49274b;\r\n   }\r\n`\r\n\r\nconst SideBarHeader = styled.div`\r\n   display: flex;\r\n   border-bottom: 1px solid #49274b;\r\n   border-bottom: 10px;\r\n   padding: 13px;\r\n\r\n   >.MuiSvgIcon-root {\r\n      padding: 8px;\r\n      color: #49274b;\r\n      font-size: 18px;\r\n      background-color: white;\r\n      border-radius: 999px;\r\n   }\r\n`\r\n\r\nconst SideBarInfo = styled.div`\r\n  flex: 1;\r\n  \r\n  > h2 {\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  > h3 {\r\n    display: flex;\r\n    font-weight: 400;\r\n    font-size: 13px;\r\n    \r\n    \r\n  }\r\n\r\n  >h3 > .MuiSvgIcon-root {\r\n    font-size: 14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n    color: green;\r\n  }\r\n`","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\nimport { db } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nexport default function ChatInput({ channelName, channelId,chatRef }) {\r\n  const [input, setInput] = useState('')\r\n  const [user] = useAuthState(auth)\r\n  \r\n  const sendMessage = (e) => {\r\n    e.preventDefault(); //prevent refresh\r\n    if (!channelId) {\r\n      return false\r\n    }\r\n    if(input){\r\n\r\n  \r\n    db.collection('rooms').doc(channelId).collection('messages').add({\r\n      message: input,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      user: user.displayName,\r\n      userImage: user.photoURL,\r\n    })\r\n  }\r\n   \r\n    chatRef?.current?.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    })\r\n    \r\n    setInput('')\r\n  }\r\n\r\n  return (\r\n    <ChatInputContainer>\r\n      <form>\r\n        <input onChange={e => setInput(e.target.value)} value={input} placeholder={`Type your message #${channelName}`} />\r\n        <Button hidden type='submit' onClick={sendMessage}>\r\n          SEND\r\n        </Button>\r\n      </form>\r\n    </ChatInputContainer>\r\n  )\r\n}\r\n\r\nconst ChatInputContainer = styled.div`\r\n  border-radius: 20px;\r\n\r\n  > form {\r\n    position:relative;\r\n    display:flex;\r\n    justify-content: center;\r\n    \r\n  }\r\n\r\n  > form input {\r\n    position:fixed;\r\n    bottom:20px;\r\n    width: 75%;\r\n    border:none;\r\n    border-radius:3px;\r\n    padding: 20px;\r\n    outline: none;\r\n  }\r\n\r\n  > form > button {\r\n    display: none !important;\r\n  }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport './Message.css'\r\nexport default function Message({ message, timestamp, user, userImage, sameUser }) {\r\n  console.log(timestamp);\r\n  return (\r\n    <MessageContainer>\r\n      {sameUser ? <>\r\n\r\n        <div className='MessageInfo'>\r\n          <h4>\r\n           \r\n            <span>\r\n              {new Date(timestamp&&timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          \r\n          </h4>\r\n          <p style={{textAlign:\"right\"}}>{message}</p>\r\n        </div>\r\n        \r\n      </> : <>\r\n        <img src={userImage} alt=\"\" />\r\n        <div  className='MessageInfo2'>\r\n          <h4>\r\n            {user}{' '}\r\n            <span>\r\n              {new Date(timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </h4>\r\n          <p>{message}</p>\r\n        </div>\r\n      </>}\r\n\r\n    </MessageContainer>\r\n\r\n  )\r\n}\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  color:white;  \r\n  >img {\r\n    height: 50px;\r\n    border-radius: 8px;\r\n  }\r\n`\r\n \r\n \r\nconst MessageInfo2 = styled.div`\r\npadding-left: 10px;\r\n>h4{\r\n  color: white;\r\n  font-weight: 300;\r\n  margin-left: 4px;\r\n  font-size: 10px;\r\n}\r\n` ","import React, { useRef, useEffect } from 'react';\r\n import styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectRoomId } from '../features/app';\r\nimport ChatInput from '../Components/ChatInput';\r\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\r\nimport { db,auth } from '../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport Message from '../Components/Message';\r\nimport './Chat.css'\r\nexport default function Chat() {\r\n  const [user1] = useAuthState(auth)\r\n  const chatRef = useRef(null);\r\n\r\n  const roomId = useSelector(selectRoomId);\r\n\r\n  const [roomDetails] = useDocument(\r\n    roomId && db.collection('rooms').doc(roomId)\r\n  )\r\n\r\n  const [roomMessages, loading] = useCollection(\r\n    roomId && db.collection('rooms').doc(roomId).collection('messages').orderBy('timeStamp', 'asc' )\r\n  )\r\n\r\n  useEffect(() => {\r\n    chatRef?.current?.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    })\r\n  }, [roomId, loading])\r\n\r\n  return (\r\n    <ChatContainer id=\"style-3\">\r\n      {roomDetails && roomMessages && (\r\n        <>\r\n          <Header>\r\n            <HeaderLeft  >\r\n              <h4><strong>#{roomDetails?.data().name}</strong></h4>\r\n              \r\n            </HeaderLeft>\r\n             \r\n          </Header>\r\n          <ChatMessages  className='chatmessagescont'  >\r\n            {roomMessages?.docs.map(doc => {\r\n              const { message, timeStamp, user, userImage } = doc.data();\r\n               \r\n              return (\r\n                <div className={user1.displayName===user?'chatmessages me': ''}>\r\n\r\n                \r\n                <Message  \r\n                sameUser={user1.displayName===user? true: false}\r\n                  key={doc.id}\r\n                  message={message}\r\n                  timestamp={timeStamp}\r\n                  user={user}\r\n                  userImage={userImage}\r\n                /></div>\r\n              )\r\n            })}\r\n            <ChatBottom ref={chatRef} />\r\n          </ChatMessages>\r\n          <ChatInput\r\n            chatRef={chatRef}\r\n            channelName={roomDetails?.data().name}\r\n            channelId={roomId}\r\n          />\r\n        </>\r\n      )}\r\n\r\n    </ChatContainer>\r\n  )\r\n}\r\n\r\nconst Header = styled.div`\r\n  display:flex;\r\n  justify-content:space-between;\r\n  padding:20px;\r\n  border-bottom: 1px solid lightgray;\r\n background-color:white;\r\n\r\n`\r\n\r\nconst ChatBottom = styled.div`\r\n  padding-bottom: 200px;\r\n`\r\n\r\nconst ChatMessages = styled.div`\r\n \r\n`\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items:center;\r\n\r\n  > h4 {\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: lowercase;\r\n    margin-right: 10px;\r\n\r\n  > h4 .MuiSvgIcon-root {\r\n    margin-left:10px;\r\n    font-size: 18px;\r\n  }\r\n}\r\n`\r\nconst HeaderRight = styled.div`\r\n  >p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n\r\n  >p .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size:16px;\r\n  }\r\n`\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 0.7;\r\n  flex-grow: 1;\r\n  overflow-y: scroll;\r\n  \r\n  margin-top: 60px;\r\n  margin-bottom:88px;\r\n  background-image: url(https://i.pinimg.com/originals/54/ba/1a/54ba1aebeb5c5c92105f430009db074c.jpg) ;\r\n  background-repeat: no-repeat, repeat;\r\n  background-position:center;\r\n  background-size: cover;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button} from '@material-ui/core';\r\nimport { auth, provider } from '../firebase';\r\n\r\nexport default function Login() {\r\n  const signIn = (e)=>{\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch((error)=>\r\n      alert(error.messages)\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginInnerContainer>\r\n        <img\r\n          src=\"https://lh3.googleusercontent.com/a-/AFdZuco9KpCf24kkuPlNC5oTHU-tg9ZldDA8txT0Yfal=s360-p-rw-no\"\r\n          alt=\"\"\r\n        />\r\n        <h1>Signup into</h1>\r\n        <p>siddharth.devcommunity.netlify.app</p>\r\n           \r\n        <Button onClick={signIn}>Sign in with google</Button>\r\n      </LoginInnerContainer>\r\n    </LoginContainer>\r\n  )\r\n}\r\n\r\nconst LoginContainer = styled.div`\r\n  background-color: #f8f8f8;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\nconst LoginInnerContainer = styled.div`\r\n  padding:100px;\r\n  text-align:center;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  >img {\r\n    object-fit: contain;\r\n    height: 100px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  > button {\r\n    margin-top: 50px;\r\n    text-transform: inherit !important;\r\n    background-color: blue !important;\r\n    color: white;\r\n  }\r\n`","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nimport Header from './Components/Header';\r\nimport SideBar from './Components/SideBar';\r\nimport Chat from './Components/Chat';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from './firebase';\r\nimport Login from './Components/Login';\r\n// import Spinner from 'react-spinkit';\r\n\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n  if (loading) {\r\n    return (\r\n      <AppLoading>\r\n        <AppLoadingContents>\r\n          <img\r\n            src=\"https://wpamelia.com/wp-content/uploads/2018/11/ezgif-2-6d0b072c3d3f.gif\"\r\n            alt=\"\"\r\n          />\r\n          {/* <Spinner\r\n            name=\"ball-spin-fade-loader\"\r\n            color=\"purple\"\r\n            fadein=\"none\"\r\n          /> */}\r\n        </AppLoadingContents>\r\n      </AppLoading>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <AppBody>\r\n              <SideBar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`\r\n\r\nconst AppLoading = styled.div`\r\n   display:grid;\r\n   place-items:center;\r\n   height: 100vh;\r\n   width:100%;\r\n`\r\n\r\nconst AppLoadingContents = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 100px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items:center;\r\n\r\n  >img {\r\n     height:100px;\r\n     padding:20px;\r\n     margin-bottom: 40px;\r\n  }\r\n`","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/app';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}